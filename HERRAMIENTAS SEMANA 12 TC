fun main() {
    println("TDD")
    if (sumaParesTest()) println("sumaParesTest Passed") else println("sumaParesTest Error")
    if (sumaImparPrimeroTest()) println("sumaImparPrimeroTest Passed") else println("sumaImparPrimeroTest Error")
    if (sumaImparSegundoTest()) println("sumaImparSegundoTest Passed") else println("sumaImparSegundoTest Error")
    if (sumaCuandoLosNumerosSonNegativosTest()) println("sumaCuandoLosNumerosSonNegativosTest Passed") else println("sumaCuandoLosNumerosSonNegativosTest Error")
    if (validarEdadTest()) println("validarEdadTest Passed") else println("validarEdadTest Error")
    if (validarEdadNegativaTest()) println("validarEdadNegativaTest Passed") else println("validarEdadNegativaTest Error")
}

fun sumaPares(a: Int, b: Int): Int {
    return a + b
}

fun sumaParesTest(): Boolean {
    val actualValue = sumaPares(2, 2)
    val expectedValue = 4
    return actualValue == expectedValue
}

fun sumaImpares(a: Int, b: Int): Int {
    return if (a % 2 != 0 && b % 2 != 0) {
        a + b
    } else {
        0 
    }
}

fun sumaImparPrimeroTest(): Boolean {
    val actualValue = sumaImpares(3, 5) 
    val expectedValue = 8
    return actualValue == expectedValue
}

fun sumaImparSegundoTest(): Boolean {
    val actualValue = sumaImpares(2, 3)
    val expectedValue = 0 
    return actualValue == expectedValue
}

fun sumaCuandoLosNumerosSonNegativosTest(): Boolean {
    val resp = sumaPares(-2, 4)
    return if (resp >= 0) {
        println("Passed")
        true
    } else {
        println("Failed")
        false
    }
}


